#####################################################################
#   Printer Settings
#####################################################################

[include mainsail.cfg]

[include stealthburner_led_effects_barf.cfg]

[include Adaptive_Mesh.cfg]
#[include Voron_Purge.cfg]

[exclude_object]

[mcu]
##  Obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
##--------------------------------------------------------------------
serial: /dev/serial/by-id/usb-Klipper_stm32f446xx_3A004B000A51373330333137-if00
restart_method: command
##--------------------------------------------------------------------
#canbus_uuid: 7d08fe4aebd2

[mcu sb2040]
canbus_uuid: 3344d2eb006c

[printer]
kinematics: corexy
max_velocity: 350  
max_accel: 6600
max_z_velocity: 15         #Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 350
square_corner_velocity: 5.0


[idle_timeout]
timeout: 36000

#####################################################################
#   X/Y Stepper Settings
#####################################################################

##  B Stepper - Left
##  Connected to MOTOR0
##  Endstop connected to DIAG0
[stepper_x]
step_pin: PF13
dir_pin: PF12
enable_pin: !PF14
rotation_distance: 40
microsteps: 32
full_steps_per_rotation:400  #set to 200 for 1.8 degree stepper
#endstop_pin: PG6
endstop_pin: tmc2209_stepper_x:virtual_endstop
position_min: 0
position_endstop: 350
position_max: 350
homing_speed: 100   #Max 100
homing_retract_dist: 0
homing_positive_dir: true

[tmc2209 stepper_x]
uart_pin: PC4
interpolate: false
run_current: 0.8
sense_resistor: 0.110
diag_pin: PG6
driver_SGTHRS: 170
#stealthchop_threshold: 0

##  A Stepper - Right
##  Connected to MOTOR1
##  Endstop connected to DIAG1
[stepper_y]
step_pin: PG0
dir_pin: PG1
enable_pin: !PF15
rotation_distance: 40
microsteps: 32
full_steps_per_rotation:400  #set to 200 for 1.8 degree stepper
#endstop_pin: PG9
endstop_pin: tmc2209_stepper_y:virtual_endstop
position_min: 0
position_endstop: 350
position_max: 350
homing_speed: 100  #Max 100
homing_retract_dist: 0
homing_positive_dir: true

[tmc2209 stepper_y]
uart_pin: PD11
interpolate: false
run_current: 0.8
sense_resistor: 0.110
diag_pin: PG9
driver_SGTHRS: 170
#stealthchop_threshold: 0
 
#####################################################################
#   Z Stepper Settings
#####################################################################

## Z0 Stepper - Front Left
##  Connected to MOTOR2_1
##  Endstop connected to DIAG_2
[stepper_z]
step_pin: PF11
dir_pin: PG3
enable_pin: !PG5
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32
endstop_pin: probe:z_virtual_endstop
##  Z-position of nozzle (in mm) to z-endstop trigger point relative to print surface (Z0)
##  (+) value = endstop above Z0, (-) value = endstop below
##  Increasing position_endstop brings nozzle closer to the bed
##  After you run Z_ENDSTOP_CALIBRATE, position_endstop will be stored at the very end of your config
#position_endstop: -0.5
position_max: 310
position_min: -5
homing_speed: 8
second_homing_speed: 3
homing_retract_dist: 3

[tmc2209 stepper_z]
uart_pin: PC6
interpolate: false
run_current: 0.8
sense_resistor: 0.110
#stealthchop_threshold: 999999

##  Z1 Stepper - Rear Left
##  Connected to MOTOR3
[stepper_z1]
step_pin: PG4
dir_pin: !PC1
enable_pin: !PA0
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

[tmc2209 stepper_z1]
uart_pin: PC7
interpolate: false
run_current: 0.8
sense_resistor: 0.110
#stealthchop_threshold: 999999

##  Z2 Stepper - Rear Right
##  Connected to MOTOR4
[stepper_z2]
step_pin: PF9
dir_pin: PF10
enable_pin: !PG2
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

[tmc2209 stepper_z2]
uart_pin: PF2
interpolate: false
run_current: 0.8
sense_resistor: 0.110
#stealthchop_threshold: 999999

##  Z3 Stepper - Front Right
##  Connected to MOTOR5
[stepper_z3]
step_pin: PC13
dir_pin: !PF0
enable_pin: !PF1
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

[tmc2209 stepper_z3]
uart_pin: PE4
interpolate: false
run_current: 0.8
sense_resistor: 0.110
#stealthchop_threshold: 999999

#####################################################################
#   Extruder
#####################################################################

##  Connected to sb2040
##  Heater - HE0
##  Thermistor - T0
[extruder]
step_pin: sb2040:gpio9
dir_pin: !sb2040:gpio10
enable_pin: !sb2040:gpio7
##  Update value below when you perform extruder calibration
##  If you ask for 100mm of filament, but in reality it is 98mm:
##  rotation_distance = <previous_rotation_distance> * <actual_extrude_distance> / 100
##  22.6789511 is a good starting point
rotation_distance: 22.6789511   #Bondtech 5mm Drive Gears
##  Update Gear Ratio depending on your Extruder Type
##  Use 50:17 for Afterburner/Clockwork (BMG Gear Ratio)
##  Use 80:20 for M4, M3.1
gear_ratio: 50:10               #BMG Gear Ratio
microsteps: 32
full_steps_per_rotation: 200    #200 for 1.8 degree, 400 for 0.9 degree
nozzle_diameter: 0.400
filament_diameter: 1.75
heater_pin: sb2040:gpio6
#sensor_type: ATC Semitec 104GT-2
sensor_type: PT1000
#pullup_resistor: 1000
sensor_pin: sb2040:gpio27
min_temp: -100
max_temp: 320
max_power: 1.0
min_extrude_temp: 170
#control = pid
#pid_kp = 26.213
#pid_ki = 1.304
#pid_kd = 131.721
##  Try to keep pressure_advance below 1.0
pressure_advance: 0.035
##  Default is 0.040, leave stock
pressure_advance_smooth_time: 0.040
#max_extrude_only_distance: 70.0
#max_extrude_cross_section: 50.0
#Maximum length (in mm of raw filament) that a retraction or
#extrude-only move may have. If a retraction or extrude-only move
#requests a distance greater than this value it will cause an error
#to be returned. The default is 50mm.

##  E0 on MOTOR6
##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 extruder]
uart_pin: sb2040:gpio8
interpolate: false
run_current: 0.7
sense_resistor: 0.110
#stealthchop_threshold: 0

#####################################################################
#   Bed Heater
#####################################################################

[heater_bed]
##  SSR Pin - HE0
##  Thermistor - TB
heater_pin: PA2
sensor_type: Generic 3950
sensor_pin: PF3
##  Adjust Max Power so your heater doesn't warp your bed. Rule of thumb is 0.4 watts / cm^2 .
#max_power: 0.6
min_temp: 0
max_temp: 120
#control: pid
#pid_kp: 58.437
#pid_ki: 2.347
#pid_kd: 363.769

#####################################################################
#   Probe
#####################################################################

[probe]
##  Inductive Probe - DIAG7
##  This probe is not used for Z height, only Quad Gantry Leveling
pin: sb2040:gpio28
x_offset: 0
y_offset: 0
#z_offset: 0
speed: 5
samples: 3
samples_result: median
sample_retract_dist: 2.0
samples_tolerance: 0.00750
samples_tolerance_retries: 10
activate_gcode:
    {% set PROBE_TEMP = 150 %}
    {% set MAX_TEMP = PROBE_TEMP + 5 %}
    {% set ACTUAL_TEMP = printer.extruder.temperature %}
    {% set TARGET_TEMP = printer.extruder.target %}

    {% if TARGET_TEMP > PROBE_TEMP %}
        { action_respond_info('Extruder temperature target of %.1fC is too high, lowering to %.1fC' % (TARGET_TEMP, PROBE_TEMP)) }
        M109 S{ PROBE_TEMP }
    {% else %}
        # Temperature target is already low enough, but nozzle may still be too hot.
        {% if ACTUAL_TEMP > MAX_TEMP %}
            { action_respond_info('Extruder temperature %.1fC is still too high, waiting until below %.1fC' % (ACTUAL_TEMP, MAX_TEMP)) }
            TEMPERATURE_WAIT SENSOR=extruder MAXIMUM={ MAX_TEMP }
        {% endif %}
    {% endif %}
    
#[z_calibration]
#nozzle_xy_position:   229,343
#switch_xy_position:   231, 325
#bed_xy_position:      175,175
#switch_offset:        0.46
#start_gcode:          ATTACH_PROBE
#before_switch_gcode: <macro name for attaching the probe AFTER probing the nozzle>
#end_gcode:            DOCK_PROBE

#####################################################################
#   Resonance Testing
#####################################################################

## ADXL345
[adxl345]
cs_pin: sb2040:gpio1
spi_software_sclk_pin: sb2040:gpio0
spi_software_mosi_pin: sb2040:gpio3
spi_software_miso_pin: sb2040:gpio2

[resonance_tester]
accel_chip: adxl345
probe_points:
    175,177,20

#####################################################################
#   Fan Control
#####################################################################

[fan]
##  Print Cooling Fan - CNC_FAN0
pin: sb2040:gpio13
kick_start_time: 0.5
##  Depending on your fan, you may need to increase this value
##  if your fan will not start. Can change cycle_time (increase)
##  if your fan is not able to slow down effectively
off_below: 0.10

[heater_fan hotend_fan]
##  Hotend Fan - CNC_FAN1
pin: sb2040:gpio14
max_power: 1.0
kick_start_time: 0.5
heater: extruder
heater_temp: 50.0
shutdown_speed: 1.0
##  If you are experiencing back flow, you can reduce fan_speed
#fan_speed: 1.0

[heater_fan controller_fan]
##  Controller fan - CNC_FAN2
pin: PD12
kick_start_time: 0.5
heater: heater_bed
heater_temp: 30
fan_speed: 0.35
shutdown_speed: 1.0

[heater_fan nevermore]
#  Exhaust fan - CNC_FAN3
pin: PD13
max_power: 1.0
kick_start_time: .5
heater: heater_bed
heater_temp: 50
fan_speed: 1.0

[heater_fan toolhead_fan]
##  Hotend Fan - CNC_FAN1
pin: sb2040:gpio15
max_power: 1.0
kick_start_time: 0.1
#sensor_type: temperature_mcu
#sensor_mcu: sb2040
#target_temp: 45
#min_temp: 10
#max_temp: 100
#min_speed: 0.1
#max_speed: 1.0
#control: pid
#pid_kp: 1.0
#pid_ki: 0.5
#pid_kd: 2.0
#off_below: 0.2
heater: extruder
heater_temp: 35.0

#####################################################################
#   Temperature Sensors
#####################################################################

[temperature_sensor toolhead_temp]
## Toolhead Temperature - T1
sensor_type: Generic 3950
sensor_pin: sb2040:gpio29
min_temp: 10
max_temp: 100
gcode_id: chamber_th

[temperature_sensor raspberry_pi]
sensor_type: temperature_host
min_temp: 10
max_temp: 100

[temperature_sensor MCU_temp]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100

[temperature_sensor SB2040]
sensor_type: temperature_mcu
sensor_mcu: sb2040

[temperature_sensor SB2040-toolhead]
sensor_type = ATC Semitec 104GT-2
sensor_pin = sb2040:gpio26
min_temp: 10
max_temp: 120

#####################################################################
# 	Homing and Gantry Adjustment Routines
#####################################################################

#[safe_z_home]
##  XY Location of the Z Endstop Switch
##  Update -10,-10 to the XY coordinates of your endstop pin 
##  (such as 157,305) after going through Z Endstop Pin
##  Location Definition step.
#home_xy_position: 175,175
#speed:100
#z_hop:10
#z_hop_speed:10

[homing_override]
axes: xyz
gcode:
  {% set home_all = 'X' not in params and 'Y' not in params and 'Z' not in params %}

  {% if home_all or 'X' in params %}
    _HOME_X
  {% endif %}
  
  {% if home_all or 'Y' in params %}
    _HOME_Y
  {% endif %}
  
  {% if home_all or 'Z' in params %}
    G90
    G0 X175 Y175 F6000
    G28 Z
    G1 Z10
  {% endif %}


[quad_gantry_level]
##  Use QUAD_GANTRY_LEVEL to level a gantry.
##  Min & Max gantry corners - measure from nozzle at MIN (0,0) and 
##  MAX (250, 250), (300,300), or (350,350) depending on your printer size
##  to respective belt positions
gantry_corners:
   -60,-10
   410,420
#  Probe points
points:
   40,25
   40,310
   310,310
   310,25
speed: 100
horizontal_move_z: 10
retries: 10
retry_tolerance: 0.00750
max_adjust: 10

[bed_mesh]
speed: 300
horizontal_move_z: 5
mesh_min: 40,40
mesh_max: 310,310
fade_start: 1
fade_end: 10.0
fade_target: 0
probe_count: 5,5
algorithm: bicubic
relative_reference_index: 12

#####################################################################
#   Filament Runout Sensor
#####################################################################

[filament_switch_sensor filament_sensor]
switch_pin: ^PG11
pause_on_runout: TRUE
event_delay: 3.0
pause_delay: 0.5

#####################################################################
#   LED Control
#####################################################################

[output_pin caselight]
## Chamber Lighting - CNC_FAN5
pin: PD15
pwm:true
shutdown_value: 0
value:1
cycle_time: 0.01

#####################################################################
#   Macros
#####################################################################

[gcode_macro G32]
gcode:
    SAVE_GCODE_STATE NAME=STATE_G32

    G90
    G28

    STATUS_CALIBRATING_Z
    QUAD_GANTRY_LEVEL

    G28 Z

    RESTORE_GCODE_STATE NAME=STATE_G32

[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice

gcode:
    {% set BED = params.BED|default(70)|float %}
    {% set EXTRUDER = params.EXTRUDER|default(150)|float %}
    {% set CHAMBER = params.CHAMBER|default(0)|float %}

    STATUS_READY
    SET_CASELIGHT_ON

    STATUS_HEATING
    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED}
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET=150

    STATUS_HOMING
    RESPOND MSG="Homing!"
    G28 ## Home the printer

    ## Checks if the bed temp is going to be set higher than 90C - turn on hotend fan to help heatsoak chamber
    {% if params.BED|int > 90 %}
    RESPOND MSG="PC-Fan on to 50% to help heatsoak chamber!"
    M106 S127 ## Set part cooling fan to 50%

    ## If the bed temp is not going to be set over 90C, then it skips turning on the part cooling fan
    {% else %}
        #
    {% endif %}

    ## Checks if the bed temp is going to be set higher than 90C - Waiting for Chamber Temp!
    {% if params.BED|int > 90 %}
    STATUS_HEATING
    RESPOND MSG="Heating Bed to 110C!"
    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET=110
    RESPOND MSG="Waiting for Chamber Temp of {CHAMBER}C!"
    TEMPERATURE_WAIT SENSOR="temperature_sensor toolhead_temp" MINIMUM={CHAMBER} ## Hold for chamber temp to be reached
    RESPOND MSG="Chamber Temp reached!"
    M107 ## Turn off part cooling fan

    ## If the bed temp is not going to be set over 90C - Wait 5 minutes for bedtemp to stabilize!
    {% else %}
        STATUS_HEATING
        RESPOND MSG="Heating Bed to {BED}C!"
        SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED}
        TEMPERATURE_WAIT SENSOR="heater_bed" MINIMUM={BED}
        RESPOND MSG="Waiting 5 Mins for Bed Soak!"
        G4 P{params.WAIT|default(300)|int * 1000} ## Hold for 5 minutes        
    {% endif %}

    G90 ## Use absolute coordinates

    RESPOND MSG="Cleaning Nozzle!"
    STATUS_CLEANING
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER}
    TEMPERATURE_WAIT SENSOR=extruder MINIMUM={EXTRUDER}
    CLEAN_NOZZLE

    STATUS_CALIBRATING_Z
    RESPOND MSG="Calibrating!"
    ##Calibrate Z motors
    QUAD_GANTRY_LEVEL
    ##Home Z after adjust Z motors
    G28 Z

    ##Check bed mesh
    STATUS_MESHING
    BED_MESH_CLEAR
    BED_MESH_CALIBRATE
    BED_MESH_PROFILE LOAD=default

    {% if params.BED|int > 90 %}
    RESPOND MSG="Heating Bed to {BED}C!"
    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED} ## Wait for bedtemp to drop if needed for material profile
    TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={BED}

    ## If the bed temp less then 90C do nothing here
    {% else %}
        #       
    {% endif %}

    ##Heatup the hotend once chamber is up to temp
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER}
    TEMPERATURE_WAIT SENSOR=extruder MINIMUM={EXTRUDER}

    VORON_PURGE
    RESPOND MSG="Printing!"
    STATUS_PRINTING

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    # safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
    
    STATUS_PART_READY
    
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-18 F800 ;retract filament from meltzone
    
    TURN_OFF_HEATERS
    
    G90                                      ; absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600  ; park nozzle at rear
    M107                                     ; turn off fan
    RESPOND MSG="Finished!!!"
    BED_MESH_CLEAR

[gcode_macro _HOME_X]
gcode:
    # Always use consistent run_current on A/B steppers during sensorless homing
    {% set RUN_CURRENT_X = printer.configfile.settings['tmc2209 stepper_x'].run_current|float %}
    {% set RUN_CURRENT_Y = printer.configfile.settings['tmc2209 stepper_y'].run_current|float %}
    {% set HOME_CURRENT = 0.7 %}
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT}

    # Home
    G28 X
    # Move away
    G91
    G1 X-10 F1200
    
    # Wait just a second… (give StallGuard registers time to clear)
    G4 P1000
    # Set current during print
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}

[gcode_macro _HOME_Y]
gcode:
    # Set current for sensorless homing
    {% set RUN_CURRENT_X = printer.configfile.settings['tmc2209 stepper_x'].run_current|float %}
    {% set RUN_CURRENT_Y = printer.configfile.settings['tmc2209 stepper_y'].run_current|float %}
    {% set HOME_CURRENT = 0.7 %}
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT}

    # Home
    G28 Y
    # Move away
    G91
    G1 Y-10 F1200

    # Wait just a second… (give StallGuard registers time to clear)
    G4 P1000
    # Set current during print
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}

[gcode_macro CLEAN_NOZZLE]
variable_start_x: 261
variable_start_y: 350
variable_start_z: 1
variable_wipe_dist: -50
variable_wipe_qty: 20
variable_wipe_spd: 50
variable_raise_distance: 30

gcode:
  #Home if Needed
  {% if "xyz" not in printer.toolhead.homed_axes %}
  G28
  {% endif %}

  ## Purge Filament
#  SAVE_GCODE_STATE NAME=PURGE  
  G90
  G0 X315 Y350 Z10 F6000
  M83
  G1 E50 F500        ; purge some filament into bucket

#  RESTORE_GCODE_STATE NAME=PURGE

  G90                                            ; absolute positioning
  ## Move nozzle to start position
  G1 X{start_x} Y{start_y} F6000
  G1 Z{start_z} F1500
  SET_HEATER_TEMPERATURE HEATER=extruder TARGET=150
  ## Wipe nozzle
  {% for wipes in range(1, (wipe_qty + 1)) %}
  G1 X{start_x + wipe_dist} F{wipe_spd * 60}
  G1 X{start_x} F{wipe_spd * 60}
  {% endfor %}

  ## Raise nozzle
  G1 Z{raise_distance}

[delayed_gcode _SET_CASELIGHT_OFF]
gcode:
  SET_CASELIGHT_OFF

[gcode_macro SET_CASELIGHT_ON]
description: Turn on the caselight LEDs
gcode:
  SET_PIN PIN=caselight VALUE=1

[gcode_macro SET_CASELIGHT_OFF]
description: Turn off the caselight LEDs
gcode:
  SET_PIN PIN=caselight VALUE=0

######################################################################
# Filament Change
######################################################################

# M600: Filament Change. This macro will pause the printer, move the
# tool to the change position, and retract the filament 50mm. Adjust
# the retraction settings for your own extruder. After filament has
# been changed, the print can be resumed from its previous position
# with the "RESUME" gcode.

[pause_resume]

[gcode_macro M600]
gcode:
    {% set X = params.X|default(50)|float %}
    {% set Y = params.Y|default(0)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E-50 F1000
    RESTORE_GCODE_STATE NAME=M600_state

[gcode_macro FILAMENT_LOAD]
gcode:
    M83 ; set e to relative positioning
    G92 E0.0
    G1 E80 F500 ; Initially go fast
    G92 E0.0
    G1 E20 F100 ; then go slow
    G92 E0.0
 
[gcode_macro FILAMENT_UNLOAD]
gcode:
    M83 ; set e to relative positioning
    # wiggle filament out of the nozzle
    G1 E0.5 F1000
    G1 E-0.5 F1000
    G1 E1.0 F1000
    G1 E-1.0 F1000
    G1 E1.5 F1000
    G1 E-1.5 F1000
    G1 E2.0 F1000
 
    G1 E-100 F500 ;fully unload
    G92 E0.0

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 41.135
#*# pid_ki = 0.972
#*# pid_kd = 434.999
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 22.692
#*# pid_ki = 1.965
#*# pid_kd = 65.524
#*#
#*# [input_shaper]
#*# shaper_type_x = zv
#*# shaper_freq_x = 52.4
#*# shaper_type_y = zv
#*# shaper_freq_y = 41.0
#*#
#*# [probe]
#*# z_offset = -0.330
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  0.017500, 0.031250, -0.001250
#*# 	  0.007500, 0.000000, -0.036250
#*# 	  0.015000, 0.038750, -0.012500
#*# tension = 0.2
#*# min_x = 115.2
#*# algo = lagrange
#*# y_count = 3
#*# mesh_y_pps = 2
#*# min_y = 108.2
#*# x_count = 3
#*# max_y = 241.8
#*# mesh_x_pps = 2
#*# max_x = 234.8
